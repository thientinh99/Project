@model TheNight_JustBuy.Areas.Admin.Models.ProductModelForCreate

@{
    ViewBag.Title = "Create Product";
    ViewBag.Function = "Products";
    ViewBag.ChildFunction = "Create Product";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card card-green">
                    <div class="card-header">
                        <h3 class="card-title">New Product</h3>
                    </div>
                    @using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            <div class="card-body">
                                <div style="color:red;font-size:20px;font-weight:bold">@ViewBag.Error</div>
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Product Name" } })
                                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.CategoryID, "Category Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.SupplierID, "Supplier Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("SupplierID", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.LaunchDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.LaunchDate, new { htmlAttributes = new { @class = "form-control oso", @type = "datetime-local" } })
                                        @Html.ValidationMessageFor(model => model.LaunchDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group row">
                                    @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Unit Price", @type = "number", @min = 1 } })
                                        @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.OldUnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.OldUnitPrice, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Old Unit Price", @type = "number", @min = 1 } })
                                        @Html.ValidationMessageFor(model => model.OldUnitPrice, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Short Description" } })
                                        @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.Description, new { @id = "summernote_Description" })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.UnitsInStock, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.UnitsInStock, new { htmlAttributes = new { @type = "number", @class = "form-control", @placeholder = "Enter Quantity" } })
                                        @Html.ValidationMessageFor(model => model.UnitsInStock, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Thumbnail, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                                    <div class="col-sm-10">
                                        <div class="custom-file">
                                            <input type="file" class="custom-file-input" name="ImageFile">
                                            <label class="custom-file-label" for="customFile">Choose file</label>
                                            @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <div class="checkbox">
                                            @{
                                                var selectListDiscontinued = new SelectList(
                                                    new List<SelectListItem>
                                                    {
                                                            new SelectListItem {Text = "Being sold", Value = "true"},
                                                            new SelectListItem {Text = "Stop selling", Value = "false"},}, "Value", "Text");
                                            }
                                            @Html.DropDownListFor(model => model.Status, selectListDiscontinued, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="card-footer">
                                <button type="submit" class="btn btn-success">Create</button>
                                <a class="btn btn-default float-right" href="~/Admin/Products">Cancel</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@section ScriptConfig
{
    <link href="~/Asset/plugins/daterangepicker/daterangepicker.css" rel="stylesheet" />
    <script src="~/Asset/plugins/daterangepicker/daterangepicker.js"></script>
    <script src="~/Asset/plugins/bs-custom-file-input/bs-custom-file-input.min.js"></script>
    <script src="~/Content/jsControllers/jsValidateData.js"></script>
    @Styles.Render("~/asset/css/form")
    @Scripts.Render("~/asset/scripts/form")
    <script>
        $(function () {
            $('#summernote_Description').summernote()
        })

    </script>
}
